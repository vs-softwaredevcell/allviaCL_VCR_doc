"use strict";(self.webpackChunkallvia_cl_vcr_doc=self.webpackChunkallvia_cl_vcr_doc||[]).push([[4],{290:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"api","title":"API Reference","description":"API documentation for AllviaCL-VCR.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/api.md","sourceDirName":".","slug":"/api","permalink":"/allviaCL_VCR_doc/en/api","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"\uc544\ud0a4\ud14d\ucc98","permalink":"/allviaCL_VCR_doc/en/architecture"}}');var i=o(4848),t=o(8453);const a={sidebar_position:4},c="API Reference",s={},l=[{value:"Core APIs",id:"core-apis",level:2},{value:"Component API",id:"component-api",level:3},{value:"Vision Processing API",id:"vision-processing-api",level:3},{value:"Error Handling",id:"error-handling",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"api-reference",children:"API Reference"})}),"\n",(0,i.jsx)(n.p,{children:"API documentation for AllviaCL-VCR."}),"\n",(0,i.jsx)(n.h2,{id:"core-apis",children:"Core APIs"}),"\n",(0,i.jsx)(n.h3,{id:"component-api",children:"Component API"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"// Create component\nComponent* CreateComponent(const std::string& name);\n\n// Configure component\nbool ConfigureComponent(Component* component, const Config& config);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"vision-processing-api",children:"Vision Processing API"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"// Process image\nImage ProcessImage(const Image& input);\n\n// Create real-time stream\nStream* CreateStream(const StreamConfig& config);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(n.p,{children:"Explains error codes and handling methods that may occur during API calls."})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>c});var r=o(6540);const i={},t=r.createContext(i);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);